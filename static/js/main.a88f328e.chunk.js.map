{"version":3,"sources":["components/CartItem.js","components/BuyPage.js","components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","faker","require","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","headers","Authorization","data","photos","allProduct","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","v4","useEffect","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","nextItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a88f328e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardText,\r\n    CardTitle,\r\n    Button\r\n\r\n}from \"reactstrap\"\r\n\r\nexport default function CartItem({product, addInCart}) {\r\n    return (\r\n        <Card className=\"mt-2 mb-1\">\r\n            <CardImg top height=\"250\" width=\"100%\" src={product.smallImage}/>\r\n            <CardBody className=\"text-center\">\r\n                <CardTitle>\r\n                    {product.productName}\r\n                </CardTitle>\r\n                <CardText className=\"secondary\">\r\n                    Price: RS.{product.productPrice}/-\r\n                </CardText>\r\n                <Button color=\"success\" onClick={()=>addInCart(product)}>Buy Now</Button>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport Axios from \"axios\"\r\nimport {Container, Row, Col} from \"reactstrap\"\r\nimport { v4 } from 'uuid';\r\nimport CartItem from './CartItem';\r\nvar faker = require('faker');\r\n\r\n\r\nconst apiKey = \"563492ad6f91700001000001d2fe9800fea84f2c96c84a062c4022ee\";\r\nconst url = \"https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1\"\r\n\r\nexport default function BuyPage({addInCart}) {\r\n\r\n    const [product, setProduct] = useState([]);\r\n    \r\n    const fetchPhotos = async () => {\r\n        const {data} = await Axios.get(url, {\r\n            headers:\r\n            {\r\n                Authorization: apiKey\r\n            }\r\n        })\r\n        const { photos } = data;\r\n        const allProduct = photos.map(photo => ({\r\n            smallImage: photo.src.medium,\r\n            tinyImage: photo.src.tiny,\r\n            productName: faker.random.word(),\r\n            productPrice: faker.commerce.price(),\r\n            id: v4()\r\n        }))\r\n        setProduct(allProduct); \r\n    }\r\n\r\n     useEffect(() => {\r\n            fetchPhotos()\r\n        }, [])\r\n\r\n    return (\r\n        <Container fluid>\r\n            <h1 className=\"text-success text-center\">Buy Page</h1>\r\n            <Row>\r\n                {product.map(product => (\r\n                    <Col md={4} key={product.id}>\r\n                        <CartItem product={product} addInCart={addInCart} />\r\n                    </Col>\r\n                    \r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter, \r\n    Row,\r\n    Col,\r\n    Card\r\n}from 'reactstrap'\r\n\r\nexport default function Cart({cartItem, removeItem, buyNow}) {\r\n    let amount = 0;\r\n    \r\n    cartItem.forEach(item => {\r\n        amount = parseFloat(amount) + parseFloat(item.productPrice);\r\n    });\r\n    return (\r\n        <Container fluid>\r\n            <h1 className=\"text-success\">Your Cart</h1>\r\n            <ListGroup>\r\n                {cartItem.map(item => (\r\n                    <ListGroupItem key = {item.id}>\r\n                        <Row>\r\n                            <Col>\r\n                                <img height={80} src={item.tinyImage}/>\r\n                            </Col>\r\n                            <Col className=\"text-center\">\r\n                                <div className=\"text-primary\">\r\n                                {\r\n                                    item.productName\r\n                                }\r\n                                </div>\r\n                                <span>\r\n                                    price:Rs.{item.productPrice}/-\r\n                                </span>\r\n                                <Button color=\"danger\" onClick={() => {removeItem(item)}}>Remove</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                ))}\r\n            </ListGroup>\r\n            {\r\n                cartItem.length >= 1 ? (\r\n                    <Card className=\"text-center mt-3\">\r\n                        <CardHeader>\r\n                            Grand Total\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            Your amount for {cartItem.length} products is Rs.{amount}/-  \r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"success\" onClick={buyNow}>Pay Here</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                ):(\r\n                       <h1 className=\"text-warning\">Cart is Empty</h1> \r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState}from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport BuyPage from './components/BuyPage';\nimport Cart from \"./components/Cart\"\nimport { Container, Row, Col } from \"reactstrap\"\nimport {ToastContainer, toast} from \"react-toastify\"\nimport \"./App.css\"\n\n\nexport default function App() {\n\n  const [cartItem, setCartItem] = useState([]); \n\n  const addInCart = (item) => {\n    const isAlreadyAdded = cartItem.findIndex(function (array) {\n      return array.id === item.id;\n    })\n\n    if (isAlreadyAdded !== -1)\n    {\n      return toast(\"Item already added\", {\n        type: \"error\"\n      })\n    }\n    setCartItem([...cartItem, item]);\n    toast(\"Item Added in the Cart\", {\n      type:\"success\"\n    })\n  }\n\n  const buyNow = () => {\n    setCartItem([]);\n    toast(\"Items purchased\", {\n      type: \"success\"\n    })\n}\n\n  const removeItem = (item) => {\n    setCartItem(cartItem.filter(nextItem => nextItem.id !== item.id))\n  }\n  \n\n  return (\n    \n\n    <Container fluid>\n      <ToastContainer/>\n      <Row>\n        <Col md = \"8\">\n          <BuyPage addInCart={addInCart} />\n        </Col>\n        <Col md = \"4\">\n         <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow}/>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}